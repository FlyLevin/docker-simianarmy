#####################################################################
### Configure which client and context to use.
#####################################################################

### The default implementation is to use an AWS Client, equaling a property like the following:
#
#simianarmy.client.context.class=com.netflix.simianarmy.basic.BasicContext

### to use an VSphereClient instead, uncomment this:
#
#simianarmy.client.context.class=com.netflix.simianarmy.client.vsphere.VSphereContext
#
### configure the specific selected client, e.g for VSphere these are
#
#simianarmy.client.vsphere.url=https://YOUR_VSPHERE_SERVER/sdk
#simianarmy.client.vsphere.username=YOUR_SERVICE_ACCOUNT_USERNAME
#simianarmy.client.vsphere.password=YOUR_SERVICE_ACCOUNT_PASSWORD

### configure the specific selected client, e.g for AWS these are

### both "accountKey" and "secretKey" can be left blank or be removed,
### if the credentials are provided as environment variable or
### an instance role is used to handle permissions
### see: http://docs.aws.amazon.com/AWSSdkDocsJava/latest/DeveloperGuide/java-dg-roles.html
{{if exists "/simianarmy/client/aws/accountkey" -}}
simianarmy.client.aws.accountKey = {{getv "/simianarmy/client/aws/accountkey"}}
{{end -}}
{{if exists "/simianarmy/client/aws/secretkey" -}}
simianarmy.client.aws.secretKey  = {{getv "/simianarmy/client/aws/secretkey"}}
{{end -}}
### Comment out the following line to detect the AWS region where the instance is running
simianarmy.client.aws.region = {{getv "/simianarmy/client/aws/region" "us-west-1"}}

### Common account name to make it easier to identify emails by subject
simianarmy.client.aws.accountName = {{getv "/simianarmy/client/aws/accountname" "default"}}

### To operate under an assumed role - the role will be assumed for all activity, sts:AssumeRole
### action must be allowed for the inital IAM role being used (long lived credentials)
### http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html
#
{{if exists "/simianarmy/client/aws/assumerolearn" -}}
simianarmy.client.aws.assumeRoleArn = {{getv "/simianarmy/client/aws/assumerolearn"}}
{{end -}}

### The VSpehere client uses a TerminationStrategy for killing VirtualMachines
### You can configure which property and value for it to set prior to resetting the VirtualMachine
#
#simianarmy.client.vsphere.terminationStrategy.property.name=Force Boot
#simianarmy.client.vsphere.terminationStrategy.property.value=server

# Uncomment to use a version of Monkey recorder that does not rely on AWS SDB
{{if eq (getv "/simianarmy/client/localdb/enabled" "false") "true" -}}
simianarmy.client.recorder.class = com.netflix.simianarmy.basic.LocalDbRecorder
{{end -}}

### Operate in Cloud Formation mode - the random suffix appended to Auto Scaling Group names is ignored
### (specify ASG names as usual with no suffix in chaos.properties)
{{if eq (getv "/simianarmy/client/cloudformationmode/enabled" "false") "true" -}}
simianarmy.client.chaos.class = com.netflix.simianarmy.basic.chaos.CloudFormationChaosMonkey
{{end -}}

# Use the following if a proxy is needed to connect to AWS APIs
# proxyHost and proxyPort are required to connect through a proxy, proxyUser and proxyPassword are optional
#simianarmy.client.aws.proxyHost=
#simianarmy.client.aws.proxyPort=
#simianarmy.client.aws.proxyUser=
#simianarmy.client.aws.proxyPassword=
