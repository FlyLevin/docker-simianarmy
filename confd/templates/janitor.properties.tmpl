# see documentation at:
# https://github.com/Netflix/SimianArmy/wiki/Configuration

# By default Janitor Monkey wakes up every hour
simianarmy.scheduler.frequency = {{getv "/simianarmy/scheduler/frequency" "1"}}
simianarmy.scheduler.frequencyUnit = {{getv "/simianarmy/scheduler/frequencyunit" "HOURS"}}
simianarmy.scheduler.threads = {{getv "/simianarmy/scheduler/threads" "1"}}
# Janitor Monkey runs every day at 11am.
simianarmy.calendar.openHour = {{getv "/simianarmy/calendar/openhour" "11"}}
simianarmy.calendar.closeHour = {{getv "/simianarmy/calendar/closehour" "11"}}
simianarmy.calendar.timezone = {{getv "/simianarmy/calendar/timezone" "America/Los_Angeles"}}

# Let Janitor Monkey run
simianarmy.janitor.enabled = {{getv "/simianarmy/janitor/enabled" "true"}}

# Don't allow Janitor Monkey to change resources (dryrun mode)
simianarmy.janitor.leashed = {{getv "/simianarmy/janitor/leashed" "true"}}

# The SDB domain for storing the resources managed by the Janitor Monkey.
simianarmy.janitor.resources.sdb.domain = {{getv "/simianarmy/janitor/resources/sdb/domain" "SIMIAN_ARMY"}}

# override to force monkey time, useful for debugging off hours
{{if exists "/simianarmy/calendar/ismonkeytime" -}}
simianarmy.calendar.isMonkeyTime = {{getv "/simianarmy/calendar/ismonkeytime" "true"}}
{{end -}}
#simianarmy.calendar.isMonkeyTime = true

# Currently Janitor Monkey can clean up the following resources
simianarmy.janitor.enabledResources = {{getv "/simianarmy/janitor/enabledresources" "Instance, ASG, EBS_Volume, EBS_Snapshot, Launch_Config"}}

# The property below needs to be a valid email address to send notifications for Janitor Monkey
simianarmy.janitor.notification.sourceEmail = {{getv "/simianarmy/janitor/notification/sourceemail" "foo@bar.com"}}

# The property below needs to be a valid email address to receive the summary email of Janitor Monkey
# after each run
simianarmy.janitor.summaryEmail.to = {{getv "/simianarmy/janitor/summaryemail/to" "foo@bar.com"}}

# The property below needs to be a valid email address to receive the notifications of Janitor Monkey
# for resouces that do not have a valid owner email specified
simianarmy.janitor.notification.defaultEmail = {{getv "/simianarmy/janitor/notification/defaultemail" "foo@bar.com"}}

# The property below specifies the number of business days that a notification is sent before the
# expected termination time. For example, if a resource is scheduled to be cleaned up by Janitor
# Monkey on 12/13/2012, Thursday and the property is set to 2, the owner will receive notification
# about the cleanup on 12/11/2012, Tuesday, which is 2 business days before the termination date.
simianarmy.janitor.notification.daysBeforeTermination = {{getv "/simianarmy/janitor/notification/daysbeforetermination" "2"}}

# The owner id that snapshots have for being managed by Janitor Monkey. This property needs
# to set if you use Edda for getting snapshots to avoid getting shared snapshots. If you are using
# AWS to get the snapshots, this property does not need to be set.
{{if exists "/simianarmy/janitor/snapshots/ownerid" -}}
simianarmy.janitor.snapshots.ownerId = {{getv "/simianarmy/janitor/snapshots/ownerid" "012345678"}}
{{end -}}
#simianarmy.janitor.snapshots.ownerId = 012345678

# The following properties are used by the Janitor rule for cleaning up orphaned instances,
# i.e. instances that are not in an auto-scaling group.
simianarmy.janitor.rule.orphanedInstanceRule.enabled = {{getv "/simianarmy/janitor/rule/orphanedinstancerule/enabled" "true"}}
# An orphaned instance is marked as cleanup candidate if it has launched for more than the number
# of days specified in the property below.
simianarmy.janitor.rule.orphanedInstanceRule.instanceAgeThreshold = {{getv "/simianarmy/janitor/rule/orphanedinstancerule/instanceagethreshold" "2"}}
# The number of business days the instance is kept after a notification is sent for the termination
# when the instance has an owner.
simianarmy.janitor.rule.orphanedInstanceRule.retentionDaysWithOwner = {{getv "/simianarmy/janitor/rule/orphanedinstancerule/retentiondayswithowner" "3"}}
# The number of business days the instance is kept after a notification is sent for the termination
# when the instance has no owner.
simianarmy.janitor.rule.orphanedInstanceRule.retentionDaysWithoutOwner = {{getv "/simianarmy/janitor/rule/orphanedinstancerule/retentiondayswithoutowner" "8"}}
# If true, don't consider members of an OpsWorks stack as orphans
simianarmy.janitor.rule.orphanedInstanceRule.opsworks.parentage = {{getv "/simianarmy/janitor/rule/orphanedinstancerule/opsworks/parentage" "false"}}

# The following properties are used by the Janitor rule for cleaning up untagged resources,
# i.e. instances that are missing any required tags
simianarmy.janitor.rule.untaggedRule.enabled = {{getv "/simianarmy/janitor/rule/untaggedrule/enabled" "false"}}
# List of tags that are required for each resource
simianarmy.janitor.rule.untaggedRule.requiredTags = {{getv "/simianarmy/janitor/rule/untaggedrule/requiredtags" "owner, purpose, project"}}
# List of resource types that require tags
simianarmy.janitor.rule.untaggedRule.resources = {{getv "/simianarmy/janitor/rule/untaggedrule/resources" "Instance, ASG, EBS_Volume, EBS_Snapshot"}}
# The number of business days the resource is kept after a notification is sent for the deletion
# when the resource has an owner.
simianarmy.janitor.rule.untaggedRule.retentionDaysWithOwner = {{getv "/simianarmy/janitor/rule/untaggedrule/retentiondayswithowner" "2"}}
# The number of business days the resource is kept after a notification is sent for the deletion
# when the resource has no owner.
simianarmy.janitor.rule.untaggedRule.retentionDaysWithoutOwner = {{getv "/simianarmy/janitor/rule/untaggedrule/retentiondayswithoutowner" "2"}}

# The following properties are used by the Janitor rule for cleaning up volumes that have been
# detached from instances for certain days.
simianarmy.janitor.rule.oldDetachedVolumeRule.enabled = {{getv "/simianarmy/janitor/rule/olddetachedvolumerule/enabled" "true"}}
# A volume is considered a cleanup candidate after being detached for the number of days specified
# in the property below.
simianarmy.janitor.rule.oldDetachedVolumeRule.detachDaysThreshold = {{getv "/simianarmy/janitor/rule/olddetachedvolumerule/detachdaysthreshold" "30"}}
# The number of business days the volume is kept after a notification is sent for the termination.
simianarmy.janitor.rule.oldDetachedVolumeRule.retentionDays = {{getv "/simianarmy/janitor/rule/olddetachedvolumerule/retentiondays" "7"}}

# The following properties are used by the Janitor rule for cleaning up volumes that should have been
# deleted by AWS when the attached instance was terminated. This rule can be enabled only if Edda
# is enabled since Janitor Monkey needs to query the history of the attached instance.
simianarmy.janitor.rule.deleteOnTerminationRule.enabled = {{getv "/simianarmy/janitor/rule/deleteonterminationrule/enabled" "true"}}
# The number of business days the volume is kept after a notification is sent for the termination.
simianarmy.janitor.rule.deleteOnTerminationRule.retentionDays = {{getv "/simianarmy/janitor/rule/deleteonterminationrule/retentiondays" "3"}}

# The following properties are used by the Janitor rule for cleaning up snapshots that have no existing
# images generated from them and launched for certain days.
simianarmy.janitor.rule.noGeneratedAMIRule.enabled = {{getv "/simianarmy/janitor/rule/nogeneratedamirule/enabled" "true"}}
# A snapshot without an image is considered a cleanup candidate after launching for the number of
# days specified in the property below.
simianarmy.janitor.rule.noGeneratedAMIRule.ageThreshold = {{getv "/simianarmy/janitor/rule/nogeneratedamirule/agethreshold" "30"}}
# The number of business days the snapshot is kept after a notification is sent for the termination.
simianarmy.janitor.rule.noGeneratedAMIRule.retentionDays = {{getv "/simianarmy/janitor/rule/nogeneratedamirule/retentiondays" "7"}}

# The following properties are used by the Janitor rule for cleaning up auto-scaling groups that have
# no active instances and the launch configuration is older than certain days.
simianarmy.janitor.rule.oldEmptyASGRule.enabled = {{getv "/simianarmy/janitor/rule/oldemptyasgrule/enabled" "true"}}
# An an auto-scaling group without active instances is considered a cleanup candidate when its launch
# configuration is older than the number of days specified in the property below.
simianarmy.janitor.rule.oldEmptyASGRule.launchConfigAgeThreshold = {{getv "/simianarmy/janitor/rule/oldemptyasgrule/launchconfigagethreshold" "50"}}
# The number of business days the auto-scaling group is kept after a notification is sent for the termination.
simianarmy.janitor.rule.oldEmptyASGRule.retentionDays = {{getv "/simianarmy/janitor/rule/oldemptyasgrule/retentiondays" "10"}}

# The following properties are used by the Janitor rule for cleaning up auto-scaling groups that have
# no active instances and have been suspended from the associated ELB traffic for certain days.
simianarmy.janitor.rule.suspendedASGRule.enabled = {{getv "/simianarmy/janitor/rule/suspendedasgrule/enabled" "true"}}
# An auto-scaling group without active instances is considered a cleanup candidate when it has been
# suspended from the associated ELB traffic for the number of days specified in the property below.
simianarmy.janitor.rule.suspendedASGRule.suspensionAgeThreshold = {{getv "/simianarmy/janitor/rule/suspendedasgrule/suspensionagethreshold" "2"}}
# The number of business days the auto-scaling group is kept after a notification is sent for the termination.
simianarmy.janitor.rule.suspendedASGRule.retentionDays = {{getv "/simianarmy/janitor/rule/suspendedasgrule/retentiondays" "5"}}

# The property below specifies whether or not Eureka/Discovery is available for Janitor monkey to use.
# Discovery/Eureka is used in the rules for cleaning up auto-scaling groups to decide if an auto-scaling group
# has an 'active' instance, i.e. an instance that is registered and up in Discovery/Eureka.
simianarmy.janitor.Eureka.enabled = {{getv "/simianarmy/janitor/eureka/enabled" "false"}}

# The following properties are used by the Janitor rule for cleaning up launch configurations that are not
# used by any auto scaling group and are older than certain days.
simianarmy.janitor.rule.oldUnusedLaunchConfigRule.enabled = {{getv "/simianarmy/janitor/rule/oldunusedlaunchconfigrule/enabled" "true"}}
# An unused launch configuration is considered a cleanup candidate when it is older than the number of days
# specified in the property below.
simianarmy.janitor.rule.oldUnusedLaunchConfigRule.ageThreshold = {{getv "/simianarmy/janitor/rule/oldunusedlaunchconfigrule/agethreshold" "4"}}
# The number of business days the launch configuration is kept after a notification is sent for the termination.
simianarmy.janitor.rule.oldUnusedLaunchConfigRule.retentionDays = {{getv "/simianarmy/janitor/rule/oldunusedlaunchconfigrule/retentiondays" "3"}}

# The property below specifies the number of days to look back in the history when crawling the last reference
# information of the images.
simianarmy.janitor.image.crawler.lookBackDays = {{getv "/simianarmy/janitor/image/crawler/lookbackdays" "60"}}
# The owner id that images have for being managed by Janitor Monkey.
{{if exists "/simianarmy/janitor/image/ownerid" -}}
simianarmy.janitor.image.ownerId = {{getv "/simianarmy/janitor/image/ownerid" "1234567890"}}
{{end -}}
#simianarmy.janitor.image.ownerId = 1234567890

# The following properties are used by the Janitor rule for cleaning up images that are not
# used by any instance or launch configuration, and not used to create other images for more than certain days.
# This rule is by default disabled, you need to have Edda running and enabled for using this rule.
simianarmy.janitor.rule.unusedImageRule.enabled = {{getv "/simianarmy/janitor/rule/unusedimagerule/enabled" "false"}}
# An unused image is considered a cleanup candidate when it is not referenced for than the number of days
# specified in the property below.
simianarmy.janitor.rule.unusedImageRule.lastReferenceDaysThreshold = {{getv "/simianarmy/janitor/rule/unusedimagerule/lastreferencedaysthreshold" "45"}}
# The number of business days the image is kept after a notification is sent for the termination.
simianarmy.janitor.rule.unusedImageRule.retentionDays = {{getv "/simianarmy/janitor/rule/unusedimagerule/retentiondays" "3"}}

# You can enable Edda for Janitor Monkey to get better performance and accuracy. You need to start Edda first
# to be able to use it.
{{if exists "/simianarmy/janitor/edda/enabled" -}}
simianarmy.janitor.edda.enabled = {{getv "/simianarmy/janitor/edda/enabled" "true"}}
{{end -}}
# simianarmy.janitor.edda.enabled = true
# The Edda endpoint in each region you need Janitor Monkey
{{if exists "/simianarmy/janitor/edda/endpoint/us-east-1" -}}
simianarmy.janitor.edda.endpoint.us-east-1 = {{getv "/simianarmy/janitor/edda/endpoint/us-east-1" "http://localhost:8080"}}
{{end -}}
#simianarmy.janitor.edda.endpoint.us-east-1 = http://localhost:8080

# The Edda client configurations.
{{if exists "/simianarmy/janitor/edda/client/timeout" -}}
simianarmy.janitor.edda.client.timeout = {{getv "/simianarmy/janitor/edda/client/timeout" "30000"}}
{{end -}}
# simianarmy.janitor.edda.client.timeout = 30000
{{if exists "/simianarmy/janitor/edda/client/retries" -}}
simianarmy.janitor.edda.client.retries = {{getv "/simianarmy/janitor/edda/client/retries" "3"}}
{{end -}}
# simianarmy.janitor.edda.client.retries = 3
{{if exists "/simianarmy/janitor/edda/client/retryinterval" -}}
simianarmy.janitor.edda.client.retryInterval = {{getv "/simianarmy/janitor/edda/client/retryinterval" "1000"}}
{{end -}}
# simianarmy.janitor.edda.client.retryInterval = 1000

# Append domain if owner tag has no domain
{{if exists "/simianarmy/janitor/notification/owneremaildomain" -}}
simianarmy.janitor.notification.ownerEmailDomain = {{getv "/simianarmy/janitor/notification/owneremaildomain" "bar.com"}}
{{end -}}
# simianarmy.janitor.notification.ownerEmailDomain = bar.com
